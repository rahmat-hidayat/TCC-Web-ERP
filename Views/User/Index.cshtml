@using Microsoft.AspNetCore.Mvc.Rendering
@model TCC_Web_ERP.ViewModels.UserIndexViewModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery

@{
    ViewData["Title"] = "User Management";
    var roleList = Model.RoleList;
    var antiforgeryToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}

<h2>@ViewData["Title"]</h2>

<!-- Filter dan Pencarian -->
<div class="row mb-3">
    <div class="col-md-3">
        <label for="roleFilter" class="form-label">Filter by Role:</label>
        <select id="roleFilter" class="form-select">
            <option value="">-- All Roles --</option>
            @foreach (var role in roleList)
            {
                <option value="@role.Value">@role.Text</option>
            }
        </select>
    </div>
    <div class="col-md-4">
        <label for="searchName" class="form-label">Search by User Name:</label>
        <input type="text" id="searchName" class="form-control" placeholder="Type at least 3 characters...">
    </div>
    <div class="col-md-5 d-flex align-items-end justify-content-end">
        <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addUserModal">+ Add User</button>
    </div>
</div>

<!-- Tabel Data User -->
<table id="userTable" class="table table-striped table-bordered" style="width:100%">
    <thead>
        <tr>
            <th>ID</th>
            <th>User Name</th>
            <th>Entry User</th>
            <th>Entry Date</th>
            <th>Status</th>
            <th style="display:none;">Role ID</th>
            <th>Role</th>
            <th>Aksi</th>
        </tr>
    </thead>
</table>

<!-- Modal Tambah User -->
<div class="modal fade" id="addUserModal" tabindex="-1" aria-labelledby="addUserModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content shadow-lg border-0 rounded-4">
            <form id="formAddUser" novalidate>
                <div class="modal-header bg-primary text-white rounded-top">
                    <h5 class="modal-title">Tambah User Baru</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Tutup"></button>
                </div>
                <div class="modal-body p-4">
                    <div class="mb-3">
                        <label for="UserName" class="form-label fw-semibold">User Name</label>
                        <input type="text" name="UserName" id="UserName" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label for="UserPassword" class="form-label fw-semibold">Password</label>
                        <input type="password" name="UserPassword" id="UserPassword" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label for="RoleId" class="form-label fw-semibold">Role</label>
                        <select name="RoleId" id="RoleId" class="form-select" required>
                            <option value="">-- Pilih Role --</option>
                            @foreach (var role in roleList)
                            {
                                <option value="@role.Value">@role.Text</option>
                            }
                        </select>
                    </div>

                    <!-- Hidden fields -->
                    <input type="hidden" name="EntDate" value="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss")" />
                    <input type="hidden" name="EntUser" value="admin" />
                    <input type="hidden" name="UptProgramm" value="UserIndex" />
                    <input type="hidden" name="Status" value="ACT" />
                    <input type="hidden" name="Valid" value="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss")" />
                    <input type="hidden" name="ChangePass" value="0" />
                    <input type="hidden" name="Blocked" value="0" />
                    <input type="hidden" name="SuperUser" value="0" />
                    <input type="hidden" name="Tablet" value="0" />
                    <input type="hidden" name="Driver" value="0" />
                </div>
                <div class="modal-footer border-0 px-4 pb-4 pt-0">
                    <button type="submit" class="btn btn-success shadow-sm px-4">Simpan</button>
                    <button type="button" class="btn btn-outline-secondary shadow-sm px-4" data-bs-dismiss="modal">Batal</button>
                </div>
                <input type="hidden" name="__RequestVerificationToken" value="@antiforgeryToken" />
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <link href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" rel="stylesheet" />
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>

    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.4.1/css/buttons.bootstrap5.min.css" />
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.bootstrap5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.print.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.68/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.68/vfs_fonts.js"></script>

    <script>
        $(function () {
            var table = $('#userTable').DataTable({
                processing: true,
                serverSide: true,
                buttons: ['copy', 'csv', 'excel', 'pdf', 'print'],
                dom: 'lBfrtip',
                lengthMenu: [
                                [10, 25, 50, -1],
                                [10, 25, 50, "All"]
                            ],
                ajax: {
                    url: '@Url.Action("GetUsersJson", "User")',
                    type: 'GET',
                    data: function (d) {
                        d.roleFilter = $('#roleFilter').val();
                        d.searchName = $('#searchName').val();
                    },
                    error: function (xhr) {
                        alert('Error loading data: ' + (xhr.responseJSON?.error || xhr.statusText));
                    }
                },
                columns: [
                    { data: 'userId' },
                    { data: 'userName' },
                    { data: 'entUser' },
                    {
                        data: 'entDate',
                        render: function (data) {
                            if (!data) return '';
                            const date = new Date(data);
                            const day = String(date.getDate()).padStart(2, '0');
                            const month = String(date.getMonth() + 1).padStart(2, '0');
                            const year = date.getFullYear();
                            return `${day}-${month}-${year}`;
                        }
                    },
                    {
                        data: 'status',
                        render: function (data) {
                            return data === 'ACT'
                                ? '<span class="text-success fw-bold">Aktif</span>'
                                : '<span class="text-danger fw-bold">Nonaktif</span>';
                        }
                    },
                    { data: 'roleId', visible: false },
                    { data: 'roleName' },
                    {
                        data: 'userId',
                        orderable: false,
                        searchable: false,
                        render: function (data) {
                            return `
                                <a href="/User/Edit/${data}" class="btn btn-sm btn-primary me-1">Edit</a>
                                <a href="/User/Details/${data}" class="btn btn-sm btn-info me-1">Details</a>
                                <a href="/User/Delete/${data}" class="btn btn-sm btn-danger me-1">Delete</a>
                                <button class="btn btn-sm btn-warning toggle-status" data-id="${data}">Toggle</button>
                            `;
                        }
                    }
                ] 
            });

            $('#roleFilter, #searchName').on('change keyup', function () {
                const search = $('#searchName').val();
                if (search.length >= 3 || search.length === 0) {
                    table.ajax.reload();
                }
            });

            $('#userTable').on('click', '.toggle-status', function () {
                const userId = $(this).data('id');
                $.ajax({
                    url: '/User/ToggleStatusJson',
                    type: 'POST',
                    headers: {
                        'RequestVerificationToken': $('[name="__RequestVerificationToken"]').val()
                    },
                    data: { id: userId },
                    success: function (response) {
                        if (response.success) {
                            table.ajax.reload(null, false);
                        } else {
                            alert(response.message || 'Gagal mengubah status user.');
                        }
                    },
                    error: function () {
                        alert('Terjadi kesalahan pada server.');
                    }
                });
            });

            $('#formAddUser').submit(function (e) {
                e.preventDefault();
                if (!this.checkValidity()) {
                    this.reportValidity();
                    return;
                }

                var formData = $(this).serialize();
                var userName = $('#UserName').val();

                $.ajax({
                    url: '/User/CreateJson',
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': $('[name="__RequestVerificationToken"]').val()
                    },
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            $('#addUserModal').modal('hide');
                            $('#formAddUser')[0].reset();
                            table.ajax.reload(null, false);

                            Swal.fire({
                                icon: 'success',
                                title: 'Berhasil!',
                                text: `Data user "${userName}" berhasil diinput.`,
                                timer: 3000,
                                showConfirmButton: false
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Gagal!',
                                text: response.message || 'Terjadi kesalahan saat menambah user.'
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'Server Error!',
                            text: 'Terjadi kesalahan pada server.'
                        });
                    }
                });
            });
        });
    </script>
}
